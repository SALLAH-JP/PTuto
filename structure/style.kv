#:import dp kivy.metrics.dp
#:import utils kivy.utils
#:import Window kivy.core.window.Window
#:import ButtonIcon ecrans.class




<Button>:
    background_normal: ""        # Désactive l'image de fond par défaut
    background_color: 0, 0, 0, 0   # On souhaite utiliser uniquement le canvas pour le fond
    color: 1, 1, 1, 1
    font_size: (Window.width * 0.025 + Window.height * 0.025) / 2
    size_hint: None, None
    size: self.texture_size
    pos_hint: {"center_x": 0.5}
    padding: dp(10), dp(10)
    canvas.before:
        Color:
            rgba: (0.25, 0.5, 0.8, 1)  if not self.text=="Non" else (1, 0, 0, 1)
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(12)]          # Coins arrondis

# Style global pour les labels
<Label>:
    color: 1, 1, 1, 1       # Texte en gris foncé pour un bon contraste
    halign: "center"
    valign: "middle"

# Style global pour les champs de texte (TextInput)
<TextInput>:
    font_size: "16sp"
    foreground_color: 0, 0, 0, 1  # Texte en noir
    background_color: 1, 1, 1, 1  # Fond blanc
    padding: [dp(10), dp(10)]
    multiline: False

# Style global pour les BoxLayout (espacement et marges par défaut)
<BoxLayout>:
    spacing: dp(10)
    padding: dp(10)
    

<Screen>:
    canvas.before:
        # Vous pouvez activer une image de fond en décommentant le Rectangle ci-dessous,
        # ou utiliser une couleur unie pour un look épuré :
        # Rectangle:
        #     source: "assets/backgrounds/background.jpg"
        #     pos: self.pos
        #     size: self.size

        Color:
            rgba: 0.95, 0.95, 0.95, 1  # Fond gris très clair pour plus de modernité
        Rectangle:
            pos: self.pos
            size: self.size

<TabbedPanel>:
    tab_width: 180
    tab_height: dp(50)
    tab_border: (2, 2, 2, 2)
    background_normal: ''
    background_color: 0, 0, 0, 0

<TabbedPanelItem>:
    color: 1, 1, 1, 1
    border: (10, 10, 10, 10)


<TabbedPanelStrip>:
    spacing: dp(20), 0

<Popup>:
    size_hint: 0.6, 0.4
    auto_dismiss: False
    # On désactive l'image de fond par défaut
    background: ""
    background_color: 0.3, 0.3, 0.3, 1

<TabbedPanelHeader>:
    background_normal: ''
    background_down: ''
    border: (0, 0, 0, 0)
    color: (0, 0, 0, 1) if self.state != 'down' else (1, 1, 1, 1)
    canvas.before:
        Color:
            rgba: (0.7, 0.7, 0.7, 1) if self.state != 'down' else (0.2, 0.7, 0.2, 1)
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(10)]


<Spinner>:
    size_hint: (None, None)
    size: dp(120), dp(40)  # Dimensions du Spinner
    background_normal: ''  # Supprime l'image de fond par défaut
    background_down: ''    # Supprime le fond lorsque le Spinner est pressé
    background_color: 0.95, 0.95, 0.95, 1  # Fond clair (gris très pâle)
    color: 0.2, 0.2, 0.2, 1  # Texte gris foncé pour un style moderne
    font_size: '16sp'
    border: (0, 0, 0, 0)  # Désactive les bordures par défaut

    canvas.before:
        Color:
            rgba: 0.95, 0.95, 0.95, 1  # Fond clair
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(10)]  # Coins arrondis
        Color:
            rgba: 0.8, 0.8, 0.8, 1  # Couleur de la bordure (gris clair)
        Line:
            rounded_rectangle: (self.x, self.y, self.width, self.height, dp(10))
            width: dp(1.5)  # Épaisseur de la bordure

<SpinnerOption>:
    background_normal: ''
    background_color: 0.95, 0.95, 0.95, 1  # Fond clair pour les options
    color: 0.2, 0.2, 0.2, 1  # Texte gris foncé
    font_size: '14sp'
    canvas.before:
        Color:
            rgba: 0.95, 0.95, 0.95, 1  # Fond clair pour les options
        Rectangle:
            pos: self.pos
            size: self.size

<ButtonIcon>:
    #background_normal: ""        # Désactive l'image de fond par défaut
    background_color: 0, 0, 0, 0   # On souhaite utiliser uniquement le canvas pour le fond
    color: 1, 1, 1, 1
    font_size: (Window.width * 0.02 + Window.height * 0.02) / 2
    pos_hint: {"center_x": 0.5}
    padding: dp(10), dp(10)
    spacing: dp(2)
    icon_pos: self.x + dp(25), self.center_y - dp(16)

    canvas.before:
        Color:
            rgba: (0.25, 0.5, 0.8, 1)  #  if not self.text=="Non" else (1, 0, 0, 1)
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(12)]
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            source: root.icon_source  # Affiche l'icône
            size: dp(32), dp(32)  # Taille de l'icône
            pos: root.icon_pos

    halign: "center"
    valign: "middle"
    text_size: self.size


